package cl.duoc.amigo.viewModel

import androidx.compose.runtime.getValue
import androidx.compose.runtime.mutableStateOf
import androidx.compose.runtime.setValue
import androidx.lifecycle.ViewModel
import cl.duoc.amigo.repository.FormularioRepository
import cl.duoc.amigo.model.FormularioModel
import cl.duoc.amigo.model.MensajesError

class FormularioViewModel : ViewModel() {
    private val repository = FormularioRepository()

    var formulario: FormularioModel by mutableStateOf( repository.getFormulario() )
    var mensajesError: MensajesError by mutableStateOf( repository.getMensajesError() )

    fun verificarFormulario(): Boolean {
        return verificarNombre() &&
                verificarCorreo() &&
                verificarContrasena() && // ‚¨ÖÔ∏è CAMBIADO: verificarContrasena()
                verificarTerminos()
    }

    fun verificarNombre(): Boolean {
        // Tu l√≥gica de verificaci√≥n de nombre estaba duplicada, la simplifico
        if (!repository.validacionNombre()) {
            mensajesError.nombre = "El nombre no puede estar vac√≠o"
            return false
        } else {
            mensajesError.nombre = ""
            return true
        }
    }

    fun verificarCorreo(): Boolean {
        // Tu l√≥gica de verificaci√≥n de correo estaba duplicada, la simplifico
        if(!repository.validacionCorreo()) {
            mensajesError.correo = "El correo no es v√°lido"
            return false
        } else {
            mensajesError.correo = ""
            return true
        }
    }

    // üöÄ NUEVA FUNCI√ìN: verificarContrasena() (reemplaza a verificarEdad())
    fun verificarContrasena(): Boolean {
        // ASUMO que tienes un m√©todo validacionContrasena() en tu repositorio
        if(!repository.validacionContrasena()) {
            // Puedes ajustar este mensaje de error seg√∫n tus reglas de contrase√±a (largo m√≠nimo, etc.)
            mensajesError.contrasena = "La contrase√±a debe tener al menos 6 caracteres"
            return false
        } else {
            mensajesError.contrasena = ""
            return true
        }
    }

    fun verificarTerminos(): Boolean {
        // Tu l√≥gica de verificaci√≥n de t√©rminos estaba duplicada, la simplifico
        if(!repository.validacionTerminos()) {
            mensajesError.terminos = "Debes aceptar los t√©rminos"
            return false
        } else {
            mensajesError.terminos = ""
            return true
        }
    }
}